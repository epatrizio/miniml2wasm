(* Factorial implementations *)

let fun_fact = fun(n : i32) : i32 {
  assert (n >= 0);
  let cnt = ref 1 in
  let f = ref 1 in
  begin
    while !cnt <= n do
      f := !f * !cnt;
      cnt := !cnt + 1
    done;
    !f
  end
};

(* TODO: Recursive version *)

(* factorial 6 direct computation *)
let fact : i32 ref = ref 0;
let n : i32 ref = ref 6 in
  begin
    assert (!n >= 0);
    fact := !n;
    while !n > 2 do
      n := !n - 1;
      fact := !fact * !n
    done
  end;

assert (fun_fact(6) == !fact)
